language: php

sudo: true

php:
  - 7.1
  - 7.2

services:
  - mongodb
  - mysql

matrix:
  allow_failures:
    - php: 7.2
  fast_finish: true

env:
  global:
    - MODULE_NAME='mongodb'
    - BASE_URL=http://127.0.0.1:8080
    - DB_NAME='travis_ci_mongodb'
    - DB_USER=root
    - DB_URL="mysql://$DB_USER@127.0.0.1/$DB_NAME"
    - COVERAGE_FILE=coverage.clover
    # Relative path for coverage is relative to current directory of running
    # code, not current directory launching phpunit. This means D8 root.
    - PHPUNIT_OPTS="-c phpunit.xml -v --debug --coverage-clover=modules/contrib/$MODULE_NAME/$COVERAGE_FILE"

    # Code coverage via coveralls.io
    - COVERALLS="php-coveralls/php-coveralls:2.1.*"

mysql:
  database: $DB_NAME
  username: $DB_USER
  encoding: utf8

cache:
  directories:
    - vendor

before_install:
  # Ensure we have the latest packages.
  - sudo apt-get -y update > /dev/null

  # Composer: update and add to PATH.
  - sed -i '1i export PATH="$HOME/.composer/vendor/bin:$PATH"' $HOME/.bashrc
  - source $HOME/.bashrc
  # - composer self-update

  # Drush: 8.x prefers using a local version, so don't require it globally.

  # MongoDB extension is preinstalled but not enabled by default.
  - echo "extension = mongodb.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini

install:
  # install php packages required for running a web server from drush on php 7
  # - sudo apt-get install -y --force-yes php-cgi php-mysql
  - sudo apt-get install -y --force-yes libxml2-utils tidy

  # Disable XDebug for speed.
  # https://github.com/travis-ci/travis-ci/issues/1697
  #- phpenv config-rm xdebug.ini

  # Configure PHP (mongodb is included by default).
  - echo 'date.timezone = "Europe/Paris"' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

  # Restore XDebug for coverage: need to back it up during removal else it won't be there to readd.
  #- phpenv config-add xdebug.ini

before_script:
  # Code runs in /home/travis/build, which is the checkout root.

  # remove Xdebug as we don't need it, is slows everything, and it causes
  # PHP Fatal error:  Maximum function nesting level of '256' reached
  #- phpenv config-rm xdebug.ini
  # navigate out of module directory to prevent blown stack by recursive module lookup
  - cd ../..

  # download Drupal 8.7 core.
  - wget -q -O - http://ftp.drupal.org/files/projects/drupal-8.7.x-dev.tar.gz | tar xz
  - cd drupal-8.7.x-dev
  - mkdir -p modules/contrib
  - mv ../fgm/mongodb modules/contrib

  # install dependencies (for the module) and Coveralls (for coverage) as part of the root vendors.
  - composer require -v "drush/drush:^9.3" "drupal/console:^1.8" "mongodb/mongodb:^1.2.0" $COVERALLS
  - composer run-script drupal-phpunit-upgrade
  - composer show mongodb/mongodb

  # create new site, stubbing sendmail path with true to prevent delivery errors and manually resolving drush path
  - mysql -e "create database $DB_NAME"
  - php core/scripts/drupal install testing -n
  - chmod 755 sites/default
  - chmod 644 sites/default/settings.php

  # Define MongoDB aliases for mongodb_* submodules.
  - tail --lines=+12 modules/contrib/mongodb/example.settings.local.php >> sites/default/settings.php

  # Reference and enable mongodb modules in build site
  #- ln -s $(readlink -e $(cd -)) drupal-8.7.x-dev/modules/custom/mongodb
  - vendor/bin/drush -y en mongodb_storage mongodb_watchdog

  # Needed for web tests in mongodb_watchdog.
  # start a web server on port 8080, run in the background; wait for initialization.
  - vendor/bin/drush runserver 127.0.0.1:8080 &
  - until netstat -an 2>/dev/null | grep '8080.*LISTEN'; do true; done

script:
  # Configure and run the tests
  # Use explicit config filtering Drupal core from coverage report.
  - cp modules/contrib/$MODULE_NAME/core.phpunit.xml core/phpunit.xml
  - cd core
  - SIMPLETEST_BASE_URL="$BASE_URL" SIMPLETEST_DB="$DB_URL" ../vendor/bin/phpunit $PHPUNIT_OPTS ../modules/contrib/$MODULE_NAME
  - cd ..

after_script:
  - cd modules/contrib/$MODULE_NAME

  # Show the basic coverage info in log.
  - xmllint --xpath "/coverage/project/metrics" $COVERAGE_FILE  | tidy -xml -q --indent-attributes 1

  # Report coverage to Scrutinizer, which runs from checkout directory.
  - wget https://scrutinizer-ci.com/ocular.phar
  - php ocular.phar code-coverage:upload -vvv --format=php-clover $COVERAGE_FILE

  # Report coverage to Coveralls.io, which runs from project root.
  - php ../../../vendor/bin/php-coveralls --exclude-no-stmt -c .coveralls.yml -r . -x coverage.clover -o coverage.json -vvv
